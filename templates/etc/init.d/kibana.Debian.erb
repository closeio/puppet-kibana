#!/bin/bash
#
# /etc/init.d/kibana -- startup script for kibana.
#
### BEGIN INIT INFO
# Provides:          kibana
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts kibana
# Description:       Starts kibana using start-stop-daemon
### END INIT INFO

set -e

PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME=kibana
DESC="kibana daemon"

if [ `id -u` -ne 0 ]; then
   echo "You need root privileges to run this script"
   exit 1
fi

. /lib/lsb/init-functions

if [ -r /etc/default/rcS ]; then
   . /etc/default/rcS
fi

# Run kibana as this user ID and group ID
KIBANA_USER=kibana
KIBANA_GROUP=kibana

# kibana install dir
KIBANA_HOME=<%= @install_root %>/kibana

PID_FILE=<%= @pid_dir %>/kibana.pid
CONFIG_FILE=<%= @config_dir %>/kibana.yml
LOG_DIR=<%= @log_dir %>

DAEMON=$KIBANA_HOME/bin/kibana
DAEMON_OPTS="serve"
if [ -n "$CONFIG_FILE" ]; then
    DAEMON_OPTS="$DAEMON_OPTS --config $CONFIG_FILE"
fi
if [ -n "$LOG_DIR" ]; then
    # Ensure log dir exists
    if [ -n "$LOG_DIR" ] && [ ! -e "$LOG_DIR" ]; then
        mkdir -p "$LOG_DIR" && chown -R "$KIBANA_USER":"$KIBANA_GROUP" "$LOG_DIR"
    fi
    DAEMON_OPTS="$DAEMON_OPTS --log-file $LOG_DIR/kibana.log --quiet"
fi

# Check DAEMON exists
if ! test -e $DAEMON; then
   log_failure_msg "Daemon $DAEMON doesn't exist"
   exit 1
fi

case "$1" in
  start)
    log_daemon_msg "Starting $DESC"

    if start-stop-daemon --test --start --pidfile "$PID_FILE" --user "$KIBANA_USER" \
      --exec "$DAEMON" >/dev/null; then
      # Not running, ok to start
      export BABEL_CACHE_PATH=<%= @babel_dir %>

      start-stop-daemon --start -c "$KIBANA_USER":"$KIBANA_GROUP" --pidfile "$PID_FILE" \
        --make-pidfile --background --exec "$DAEMON" -- "$DAEMON_OPTS"
      log_end_msg $?
    else
      log_begin_msg "Already running."
      log_end_msg 0
      exit 0
    fi
    ;;
  stop)
    log_daemon_msg "Stopping $DESC"

    set +e

    if [ -f "$PID_FILE" ]; then
      start-stop-daemon --stop --pidfile "$PID_FILE" \
        --user "$KIBANA_USER" \
        --retry=TERM/20/KILL/5 >/dev/null

      if [ $? -eq 1 ]; then
        log_progress_msg "$DESC is not running but pid file exists, cleaning up"
      elif [ $? -eq 3 ]; then
        PID="`cat $PID_FILE`"
        log_failure_msg "Failed to stop $DESC (pid $PID)"
        exit 1
      fi

      rm -f "$PID_FILE"
    else
      log_progress_msg "(not running)"
    fi

    log_end_msg 0
    set -e
    ;;
  status)
    status_of_proc -p $PID_FILE kibana kibana && exit 0 || exit $?
    ;;
  restart|force-reload)
    if [ -f "$PID_FILE" ]; then
      $0 stop
      sleep 1
    fi
    $0 start
    ;;
  *)
    log_success_msg "Usage: $0 {start|stop|restart|force-reload|status}"
    exit 1
    ;;
esac

exit 0
